#!/bin/sh
# fkdep 1.0.1
# Copyright (C) Alexander Kozhevnikov 2015-01-21;
# 
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public Licence as published by
# the Free Software Foundation, either version 3 of the licence or,
# (at your option) any later version.
# 
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
# GNU General Public License for details.
# 
# You should've received a copy of the GNU General Public License
# with this program. If not, see <http://www.gnu.org/licences/>,
# or write to the Free Software Foundation, Inc.,
# 59 Temple Place, Suite 330 Boston MA 02111-1307 USA.

# TODO: 'hard' faking, with the same package name as the real thing, to deal
# with versioned 'Depends' fields / if anyone needs it.

# Function to add a file to a 'common' format 'ar' archive.
# NO support for filenames longer than 16 characters; that is unneeded for deb.
# Assumes $DEB and $TIMESTAMP are within scope.
arAddFile()
{
 SIZE=`ls -l $1|awk '{print $5}'`

 printf '%-16s%-12s0     0     100644  %-10s`\n' $1 $TIMESTAMP $SIZE >> $DEB

 cat $1 >> $DEB

 # File entries must be 2-byte aligned, newline padded.
 if [ $((SIZE % 2)) = 1 ]
 then
  printf '\n' >> $DEB
 fi
}

# Put name of package to fake into new variable.
# Unnecessary now, will be needed once hard faking is implemented.
PACKAGE=fkdep-$1

if printf %s "$PACKAGE" | grep -o '[^a-z0-9+.-]'
then
 printf '^ Illegal character(s) for a deb package name.\n'
 exit 1
fi

if dpkg -s "$PACKAGE" 2> /dev/null | grep -q ' installed'
then
 printf 'You already have a package named "%s" installed.\n' "$PACKAGE"
 exit 2
fi

# Make new /tmp folder.
if ! WORKDIR=`mktemp -d /tmp/"$PACKAGE".XXXXXX`
then
 printf 'Could not create temporary working directory.\n'
 exit 3
fi

SUBDIR=$WORKDIR/sub
mkdir "$SUBDIR"

# Using directory first as just a blank directory to generate data.tar.gz
cd "$SUBDIR"
tar -czf "$WORKDIR"/data.tar.gz .

# Now creating the actual DEBIAN files needed.
cat > "$SUBDIR"/changelog <<DELIM
$PACKAGE (1.0) unstable; urgency=low
  * Generated by fkdep!

 -- fkdep <fkdep@example.com>  `date -R`
DELIM

cat > "$SUBDIR"/control <<DELIM
Source: $PACKAGE
Section: metapackages
Priority: extra
Maintainer: fkdep <fkdep@example.com>
Package: $PACKAGE
Provides: $1
Architecture: all
Version: 1.0
Depends: 
Description: Metapackage pretending to provide package $1
DELIM

cat > "$SUBDIR"/copyright <<DELIM
            DO WHAT THE FUCK YOU WANT TO PUBLIC LICENSE
                    Version 2, December 2004

 Copyright (C) 2004 Sam Hocevar <sam@hocevar.net>

 Everyone is permitted to copy and distribute verbatim or modified
 copies of this license document, and changing it is allowed as long
 as the name is changed.

            DO WHAT THE FUCK YOU WANT TO PUBLIC LICENSE
   TERMS AND CONDITIONS FOR COPYING, DISTRIBUTION AND MODIFICATION

  0. You just DO WHAT THE FUCK YOU WANT TO.
DELIM

# Package the control files, then clean them up.
tar -czf "$WORKDIR"/control.tar.gz .
cd "$WORKDIR"
rm -r "$SUBDIR"

printf '2.0\n' > debian-binary

# Build .deb, emulating the common 'ar' format
DEB=$PACKAGE.deb
touch "$DEB"
# Grab current timestamp
TIMESTAMP=`date +%s -r "$DEB"`

printf '!<arch>\n' > $DEB
arAddFile debian-binary
arAddFile control.tar.gz
arAddFile data.tar.gz

rm data.tar.gz control.tar.gz debian-binary

# If root, install and cleanup, if not, point user to generated deb file.
if [ `id -u` = 0 ]
then
 dpkg -i "$DEB"
 cd /
 rm -r "$WORKDIR"
else
 printf '%s\n' \
  'Did not have root permissions, cannot install the deb file.' \
  'You may install it manually instead, it is located at:' \
  "$WORKDIR"/"$DEB"
fi
return 0
